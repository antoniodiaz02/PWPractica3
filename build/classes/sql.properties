###########################################
# Consultas relacionadas con los usuarios.#
###########################################

# Inserta un usuario a la base de datos.
insert_usuario=INSERT INTO Usuarios (nombre, apellidos, fechaNacimiento, fechaInscripcion, correoElectronico) VALUES (?, ?, ?, ?, ?);

# Busca si existe un usuario dado un correo.
buscar_por_correo=SELECT * FROM Usuarios WHERE correoElectronico = ?;

# Lista los usuarios registrados a la base de datos.
listar_usuarios=SELECT * FROM Usuarios;

# Modifica atributos del usuario a su elección.
# modificar_usuario= Esta sentencia se crea de forma dinámica en el JugadorDAO.


##########################################
# Consultas relacionadas con el material.#
##########################################

# Insertar un nuevo material
insert_material=INSERT INTO Materiales (idMaterial, tipo, uso, estado) VALUES (?, ?, ?, ?);

# Buscar material por su ID
find_material_by_id=SELECT * FROM Materiales WHERE idMaterial = ?;

# Actualizar un material existente
update.material=UPDATE Materiales SET tipoMaterial = ?, usoInterior = ?, estadoMaterial = ? WHERE idMaterial = ?;

# Eliminar un material
delete.material=DELETE FROM Materiales WHERE idMaterial = ?;

# Consultar todos los materiales
find.all.materials=SELECT * FROM Materiales;




###########################################################################################################################################################
# Consultas relacionadas con las pistas
###########################################################################################################################################################

# Insertar una nueva pista
insert_pista=INSERT INTO Pistas (nombre, estado, tipo, tamano, numMaxJugadores) VALUES (?, ?, ?, ?, ?);

# Seleccionar todas las pistas
select.pistas=SELECT * FROM pistas;

# Seleccionar una pista por su nombre
find_pista_by_nombre=SELECT * FROM Pistas WHERE nombre = ?;

# Asociar un material a una pista
asociar_material_a_pista=INSERT INTO Material_Pista (idPista, idMaterial) VALUES (?, ?)

# Consulta para listar todas las pistas
listar_todas_las_pistas = SELECT * FROM Pistas;

# Listar las pistas asociadas a un material específico
select.pistas.by.material=SELECT p.* FROM pistas p INNER JOIN pista_material pm ON p.id_pista = pm.id_pista WHERE pm.id_material = ?;

# Actualizar la disponibilidad de una pista (por ejemplo, cuando se asocia o se libera)
update.pista.disponible=UPDATE pistas SET disponible = ? WHERE id_pista = ?;
###########################################################################################################################################################



# SQL query to fetch materials for a given pista
find_materials_for_pista = SELECT m.idMaterial, m.nombre FROM Material m INNER JOIN Material_Pista mp ON m.idMaterial = mp.idMaterial WHERE mp.idPista = ?

insertar_material_a_pista=INSERT INTO Material_Pista (nombrePista, idMaterial) VALUES (?, ?);

###########################################################################################################################################################
# Consultas relacionadas con las reservas
###########################################################################################################################################################

insert_reserva=INSERT INTO Reservas (usuarioId, fechaHora, duracion, pistaId, precio, descuento, tipoReserva, numNinos, numAdultos) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

buscar_reserva= SELECT * FROM Reservas WHERE idReserva= ?;

buscar_fecha_pista= SELECT * FROM Reservas WHERE pistaId= ? AND DATE(fechaHora) = ?;

eliminar_reserva= DELETE FROM Reservas WHERE idReserva = ?;

modificar_reserva= UPDATE Reservas SET usuarioId = ?, fechaHora = ?, duracion = ?, pistaId = ?, precio = ?, descuento = ?, tipoReserva = ?, numNinos = ?, numAdultos = ? WHERE idReserva= ?;

select_last_bono=SELECT idReserva FROM Reservas ORDER BY idReserva DESC LIMIT 1;

select_futuras=SELECT * FROM Reservas WHERE fechaHora > NOW();

buscar_reserva_existente=SELECT COUNT(*) FROM Reservas WHERE pistaId = (SELECT idPista FROM Pistas WHERE nombre = ?) AND fechaHora = ?;

###########################################################################################################################################################
# Consultas relacionadas con los bonos
###########################################################################################################################################################

insert_bono=INSERT INTO Bonos (usuarioId, sesiones, tipoPista) VALUES (?, ?, ?);

buscar_bono= SELECT * FROM Bonos WHERE idBono= ?;

select_last_bono=SELECT idBono FROM Bonos ORDER BY idBono DESC LIMIT 1;

update_bono= UPDATE Bonos SET sesiones = ?, fechaInicio = ?, fechaCaducidad= ? WHERE idBono = ?;




